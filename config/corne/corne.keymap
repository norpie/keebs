#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Key position definitions for Corne (42-key layout)
// Numbers correspond to the key matrix positions
#define KEYS_L  0  1  2  3  4  5 \
               12 13 14 15 16 17 \
               24 25 26 27 28 29

#define KEYS_R  6  7  8  9 10 11 \
               18 19 20 21 22 23 \
               30 31 32 33 34 35

#define THUMBS 36 37 38 39 40 41

// Timing definitions
#define QUICK_TAP_MS 175

// Homerow mod macro definition (adapted from urob's timeless homerow mods)
#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_HOLD_TAP(NAME, \
        bindings = <HOLD>, <TAP>; \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <150>; \
        hold-trigger-on-release; \
        hold-trigger-key-positions = <TRIGGER_POS>;)

// Define ZMK_HOLD_TAP macro
#define ZMK_HOLD_TAP(name, ...) \
    name: name { \
        compatible = "zmk,behavior-hold-tap"; \
        #binding-cells = <2>; \
        __VA_ARGS__ \
    };


/ {
  behaviors {
    // Left-hand homerow mods
    MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)
    
    // Right-hand homerow mods  
    MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)
    
    // Space hold-tap: tap for space, hold for nav layer
    spc_nav: spc_nav {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <280>;
      quick-tap-ms = <QUICK_TAP_MS>;
      require-prior-idle-ms = <150>;
      bindings = <&mo>, <&kp>;
      hold-trigger-key-positions = <KEYS_L KEYS_R>;
      hold-trigger-on-release;
    };
    
    // Enter hold-tap: tap for enter, hold for numsym layer
    ret_numsym: ret_numsym {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <280>;
      quick-tap-ms = <QUICK_TAP_MS>;
      require-prior-idle-ms = <150>;
      bindings = <&mo>, <&kp>;
      hold-trigger-key-positions = <KEYS_L KEYS_R>;
      hold-trigger-on-release;
    };
    
    // Function layer hold-tap: tap for function key, hold for fn layer
    fn_key: fn_key {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <280>;
      quick-tap-ms = <QUICK_TAP_MS>;
      require-prior-idle-ms = <150>;
      bindings = <&mo>, <&kp>;
      hold-trigger-key-positions = <KEYS_L KEYS_R>;
      hold-trigger-on-release;
    };
  };

  combos {
    compatible = "zmk,combos";
    
    // Parentheses combos on UI and IO
    combo_lpar {
      bindings = <&kp LPAR>;
      key-positions = <7 8>;
      layers = <0>;
      timeout-ms = <18>;
      require-prior-idle-ms = <150>;
    };
    
    combo_rpar {
      bindings = <&kp RPAR>;
      key-positions = <8 9>;
      layers = <0>;
      timeout-ms = <18>;
      require-prior-idle-ms = <150>;
    };
    
    // Braces combos on JK and KL  
    combo_lbrc {
      bindings = <&kp LBRC>;
      key-positions = <19 20>;
      layers = <0>;
      timeout-ms = <18>;
      require-prior-idle-ms = <150>;
    };
    
    combo_rbrc {
      bindings = <&kp RBRC>;
      key-positions = <20 21>;
      layers = <0>;
      timeout-ms = <18>;
      require-prior-idle-ms = <150>;
    };
    
    // Brackets combos on M, and ,.
    combo_lbkt {
      bindings = <&kp LBKT>;
      key-positions = <31 32>;
      layers = <0>;
      timeout-ms = <18>;
      require-prior-idle-ms = <150>;
    };
    
    combo_rbkt {
      bindings = <&kp RBKT>;
      key-positions = <32 33>;
      layers = <0>;
      timeout-ms = <18>;
      require-prior-idle-ms = <150>;
    };
  };

  keymap {
    compatible = "zmk,keymap";
    
    default_layer {
      display-name = "Base";
      bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮          ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
              &kp TAB         &kp Q         &kp W         &kp E         &kp R         &kp T                    &kp Y         &kp U         &kp I         &kp O         &kp P       &kp BSPC
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
              &kp ESC      &hml LGUI A   &hml LALT S   &hml LSHFT D  &hml LCTRL F     &kp G                    &kp H      &hmr RCTRL J  &hmr RSHFT K  &hmr RALT L  &hmr RGUI SEMI   &kp SQT      
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
               &trans         &kp Z         &kp X         &kp C         &kp V         &kp B                    &kp N         &kp M       &kp COMMA      &kp DOT       &kp FSLH       &trans       
        // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                          &trans   &fn_key 3 LSHFT  &spc_nav 1 SPACE          &ret_numsym 2 RET   &kp RSHFT      &trans       
        //                                           ╰─────────────┴─────────────┐             │          │             ┌─────────────┴─────────────╯
        //                                                                       ╰─────────────╯          ╰─────────────╯
      >;
    };
    
    nav {
      display-name = "Nav";
      bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮          ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
              &trans        &trans     &kp LC(RIGHT)    &trans        &trans        &trans                   &trans        &kp PG_UP      &trans        &trans        &trans        &trans     
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
              &trans     &hml LGUI A   &hml LALT S   &hml LSHFT D  &hml LCTRL F     &trans                   &kp HOME  &hmr RCTRL LEFT &hmr RSHFT DOWN &hmr RALT UP &hmr RGUI RIGHT  &kp END      
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
               &trans         &trans        &trans        &trans        &trans     &kp LC(LEFT)              &trans        &kp PG_DN      &trans        &trans        &trans        &trans       
        // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                          &trans        &trans        &trans                 &trans         &trans        &trans       
        //                                           ╰─────────────┴─────────────┐             │          │             ┌─────────────┴─────────────╯
        //                                                                       ╰─────────────╯          ╰─────────────╯
      >;
    };
    
    numsym {
      display-name = "Num/Sym";
      bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮          ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
              &trans         &trans        &kp N7        &kp N8        &kp N9        &trans                   &kp CARET     &kp AMPS      &kp STAR      &kp UNDER     &kp PIPE      &kp PRCNT     
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
              &trans         &kp N0        &kp N4        &kp N5        &kp N6        &trans                   &kp EQUAL     &kp PLUS      &kp MINUS     &kp FSLH      &kp BSLH      &trans      
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
               &trans        &trans        &kp N1        &kp N2        &kp N3        &trans                   &kp TILDE     &kp GRAVE     &kp HASH      &kp AT        &kp DLLR      &trans       
        // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                          &trans        &trans        &trans                   &trans        &trans        &trans       
        //                                           ╰─────────────┴─────────────┐             │          │             ┌─────────────┴─────────────╯
        //                                                                       ╰─────────────╯          ╰─────────────╯
      >;
    };
    
    fn {
      display-name = "Function";
      bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮          ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
               &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                   &trans    &kp C_VOL_DN  &kp C_MUTE    &kp C_VOL_UP    &trans        &trans     
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
               &kp F7        &kp F8        &kp F9       &kp F10       &kp F11       &kp F12                  &trans    &kp C_PREV    &kp C_PP      &kp C_NEXT      &trans        &trans      
        // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
               &trans        &trans        &trans        &trans        &trans        &trans                   &trans   &kp C_BRI_DN  &kp C_BRI_UP    &trans        &trans        &trans       
        // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤          ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                          &trans        &trans        &trans                   &trans        &trans        &trans       
        //                                           ╰─────────────┴─────────────┐             │          │             ┌─────────────┴─────────────╯
        //                                                                       ╰─────────────╯          ╰─────────────╯
      >;
    };
  };
};
