#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

// Include zmk-helpers (we'll need to define ZMK_HOLD_TAP manually since we don't have zmk-helpers)
#define ZMK_HOLD_TAP(name, ...) \
    name: name { \
        compatible = "zmk,behavior-hold-tap"; \
        #binding-cells = <2>; \
        __VA_ARGS__ \
    };

// Key position definitions for BT60 v2 (60% layout)
// Numbers correspond to the key matrix positions (0-63 for 60% boards)
#define KEYS_L  0  1  2  3  4  5  6 \
               14 15 16 17 18 19 20 \
               28 29 30 31 32 33 34

#define KEYS_R  7  8  9 10 11 12 13 \
               21 22 23 24 25 26 27 \
               35 36 37 38 39 40 41

#define THUMBS 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63

// Timing definitions
#define QUICK_TAP_MS 175

// Homerow mod macro definition (adapted from urob's timeless homerow mods)
#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_HOLD_TAP(NAME, \
        bindings = <HOLD>, <TAP>; \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <150>; \
        hold-trigger-on-release; \
        hold-trigger-key-positions = <TRIGGER_POS>;)


/ {
  behaviors {
    // Left-hand homerow mods
    MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)
    
    // Right-hand homerow mods  
    MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)
  };
  
  chosen {
    zmk,physical-layout = &layout_60_ansi;
  };

  keymap {
    compatible = "zmk,keymap";
    
    default_layer {
        // ------------------------------------------------------------------------------------------
        // | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BSPC   |
        // | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   \     |
        // | CAPS  |GUI/A|ALT/S|SFT/D|CTL/F|  G  |  H  |CTL/J|SFT/K|ALT/L|GUI/;|  '  |     ENTER    |
        // |  SHIFT    |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  | /   |      SHIFT     |
        // |  CTL  |  WIN  |  ALT  |            SPACE               | ALT |   1  |  MENU   |  CTRL  |
        // ------------------------------------------------------------------------------------------
      bindings = <

        &kp ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp  N8   &kp  N9 &kp  N0  &kp MINUS &kp EQUAL &kp BSPC
        &kp TAB  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp  I    &kp  O  &kp  P   &kp LBKT &kp RBKT   &kp BSLH
        &kp CAPS  &hml LGUI A  &hml LALT S  &hml LSHFT D  &hml LCTRL F  &kp G  &kp H  &hmr LCTRL J  &hmr RSHFT K    &hmr LALT L  &hmr LGUI SEMI &kp SQT            &kp RET
        &kp LSHFT  &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH                &kp RSHFT
        &kp LCTRL &kp LGUI &kp LALT            &kp SPACE                          &kp RALT  &mo 1 &mo 2    &kp RCTRL
      >;
    };
    raise {
        // ------------------------------------------------------------------------------------------
        // |GRAVE| F1  | F2  | F3  | F4  | F5  | F6  | F7  | F8  | F9  | F10 | F11 | F12 |    DEL   |
        // | TAB  |  Q  | UP  |  E  | R | T |  Y  |  U  | INS |  O  | P | VOLDN | VOLUP |   BSLH   |
        // | CAPS  | LEFT| DOWN|RIGHT| F | G |  H  |  J  |  K  |  L  | ; | ' |     ENTER     |
        // |  SHIFT   | Z | X |  C | V | B |  N  |  M  |  K_PREV  | K_PP | K_NEXT |      SHIFT    |
        // | CTL | WIN|  ALT  |            SPACE               | ALT |   1  |  RESET  | BT_CLR |
        // ------------------------------------------------------------------------------------------
      bindings = <
        &kp GRAVE &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &kp DEL
        &trans &trans &kp UP &trans &trans &trans &trans &trans &kp INS &trans &trans &kp C_VOL_DN &kp C_VOL_UP &trans
        &trans    &kp LEFT &kp DOWN &kp RIGHT &trans &trans &trans &trans &trans &trans &trans &trans   &trans
        &trans   &trans &trans &trans &trans &trans &trans &trans &kp K_PREV &kp K_PP &kp K_NEXT &trans
        &trans &trans  &trans              &trans                            &trans   &trans   &sys_reset &trans
      >;
    };
    
    bluetooth {
        // ------------------------------------------------------------------------------------------
        // |     | BT1 | BT2 | BT3 | BT4 | BT5 |     |     |     |     |     |     |     |          |
        // |      |     | BT5 |     |     |     |     |     |     |     |     |     |     |          |
        // |       |     |     |     |     |     |     | BT1 |     | BT4 |     |     |              |
        // |        |     |     |     | BT3 |     |     | BT2 |     |     |     |              |
        // |BT_PRV |BT_NXT |       |                                   |     |     |       |BT_CLR|
        // ------------------------------------------------------------------------------------------
      bindings = <
        &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans &trans &trans &trans &trans &trans &trans
        &trans &trans &bt BT_SEL 4 &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
        &trans &trans &trans &trans &trans &trans &trans &bt BT_SEL 0 &trans &bt BT_SEL 3 &trans &trans &trans
        &trans &trans &trans &trans &bt BT_SEL 2 &trans &trans &bt BT_SEL 1 &trans &trans &trans &trans
        &bt BT_PRV &bt BT_NXT &trans &trans &trans &trans &bootloader &bt BT_CLR_ALL
      >;
    };
    
  };
};
